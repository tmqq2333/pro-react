.home-list{
  overflow: hidden;
  background-color: #111;
  display: flex;
  transform-style: preserve-3d;
  perspective: 1000px;
  background: #000;
  overflow: hidden;
  --c-eyeSocket: rgb(41, 104, 217);
  --c-eyeSocket-outer: #02ffff;
  --c-eyeSocket-outer-shadow: transparent;
  --c-eyeSocket-inner: rgb(35, 22, 140);
}

// @property --height {
//   syntax: '<length>';
//   inherits: false;
//   initial-value: 1px;
// }

// :root {
//     --mainColor: #02ffff;
// }


// .g-container {
//     position: relative;
//     margin: auto;
//     width: 300px;
//     height: 300px;
//     transform-style: preserve-3d;
//     cursor: pointer;
//     // transition: .1s;
    
//     &:hover .border-particle{
//         filter: url('#particle');
//     }
// }
// .border-particle {
//     position: absolute;
//     width: 700px;
//     height: 700px;
//     top: 50%;
//     left: 50%;
//     transform: translate3d(-50%, -50%, -20px);
//     transform-style: preserve-3d;
//     transition: 0 .2s;
    
    
//     &::before {
//         content: "";
//         position: absolute;
//         top: 50%;
//         left: 50%;
//         width: 300px;
//         height: 300px;
//         border: 15px solid #ed243c;
//         border-radius: 50%;
//         transform: translate(-50%, -50%);
//     }
// }

// .border {
//     position: relative;
//     height: 300px;
//     border-radius: 50%;
//     border: 10px solid #02ffff;
//     box-shadow: inset 0 0 0 5px #2968d9;
//     box-sizing: border-box;
// }

// .circle {
//     --height: 1px;
//     position: absolute;
//     width: 5px;
//     height: var(--height);
//     --halfHeight: calc((var(--height) + 35px) / 2);
//     top: 50%;
//     left: 50%;
//     transform: translate(-50%, calc(-50% - var(--halfHeight)));
//     color: var(--mainColor);
//     border-top: 35px solid currentColor;
//     transform-origin: 50% 100%;
//     -webkit-box-reflect: below;
//     filter: drop-shadow(0 0 10px #2968d9);
//     animation: rotate 10s infinite ease-in-out;
    
//     &::before,
//     &::after {
//         content: "";
//         position: absolute;
//         bottom: 0;
//         left: 0;
//         width: 5px;
//         height: inherit;
//         border-top: 35px solid currentColor;
//         transform-origin: 50% 100%;
//         -webkit-box-reflect: below;
//     }
    
//     &::after {
//         transform: rotate(60deg);
//     }
    
//     &::before {
//         transform: rotate(120deg);
//     }
// }


// @keyframes rotate {
//     50% {
//         --height: 50px;
//         filter: drop-shadow(0 0 10px #2968d9) hue-rotate(360deg);
//         transform: translate(-50%, calc(-50% - var(--halfHeight))) rotate(1080deg) translateZ(30px);
//     }
//     100% {
//         transform: translate(-50%, calc(-50% - var(--halfHeight))) rotate(2160deg) translateZ(0px);
//     }
// }
// :root {
   
// }

.eyeSocket {
    position: absolute; // 浮动居中
    left: calc(50% - 75px);
    top: calc(50% - 75px);
    width: 150px; // 固定宽度
    aspect-ratio: 1; // 长宽比 1:1 如果浏览器不支持该属性，换成 height: 150px 也一样
    border-radius: 50%;
    z-index: 1;
    border: 4px solid var(--c-eyeSocket);
    box-shadow: 0px 0px 50px var(--c-eyeSocket-outer-shadow); /* 当生气时添加红色外发光，常态则保持透明 */
    transition: border 0.5s ease-in-out, box-shadow 0.5s ease-in-out; /* 添加过渡效果 */
}

.eyeSocket::before,
.eyeSocket::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); // 居中
    border-radius: 50%;
    box-sizing: border-box; // css3盒子模型
    transition: all 0.5s ease-in-out; /* 添加过渡效果 */
}
.eyeSocket::before {
    width: calc(100% + 20px);
    height: calc(100% + 20px);
    border: 6px solid #02ffff;
    border: 6px solid var(--c-eyeSocket-outer);
}
.eyeSocket::after {
    width: 100%;
    height: 100%;
    border: 4px solid rgb(35, 22, 140);
    box-shadow: inset 0px 0px 30px rgb(35, 22, 140);
    border: 4px solid var(--c-eyeSocket-inner);
    box-shadow: inset 0px 0px 30px var(--c-eyeSocket-inner);
}

.eyeSocketSleeping {
    animation: sleeping 6s infinite;
}

@keyframes sleeping {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(1.2);
    }

    100% {
        transform: scale(1);
    }
}
#eyeFilter {
    filter: url('#filterl'); /* 开启滤镜 */
    left: calc(50% - 92px);
    top: calc(50% - 92px);
    transition: all 0.5s ease-in-out;
}
.filter .eyeSocket {
    opacity: 0; // 默认状态下不透明度为0
    // 添加过渡效果，值得注意的是不能丢了原本的过渡效果，所以这里使用all
}
.eyeSocketLooking {
    animation: lookAround 2.5s; // 添加动画，只播放一次
}
/* 环视动画 */
@keyframes lookAround {
    0% {
        transform: translateX(0) rotateY(0);
    }

    10% {
        transform: translateX(0) rotateY(0);
    }

    40% {
        transform: translateX(-70px) rotateY(-30deg);
    }

    80% {
        transform: translateX(70px) rotateY(30deg);
    }

    100% {
        transform: translateX(0) rotateY(0);
    }
}
